{"version":3,"file":"ionic3-star-rating-component.js","sourceRoot":"","sources":["../../src/components/ionic3-star-rating-component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, OnInit, Output, EventEmitter} from '@angular/core';\nimport {Events} from 'ionic-angular'\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nconst HTML_TEMPLATE = `\n<div class=\"ionic3-star-rating\">\n  <button [ngStyle]=\"{'width' : fontSize, 'height' : fontSize}\" *ngFor=\"let index of iconsArray\" id=\"{{index}}\" type=\"button\" (click)=\"changeRating($event)\">\n    <i [ngStyle]=\"{'color':index < this.Math.round(this.parseFloat(rating)) ? activeColor : defaultColor, 'font-size' : fontSize }\" [class]=\"{{(halfStar ==='true' && (rating - index > 0) && (rating - index <= 0.5)) ? halfIcon : (index < this.Math.round(this.parseFloat(rating))) ? activeIcon : defaultIcon}}\"></i>\n  </button>\n</div>\n`\n\nconst CSS_STYLE = `\n    .ionic3-star-rating .button {\n        background: none;\n        box-shadow: none;\n        -webkit-box-shadow: none;\n    }\n`\n\n@Component({\n    selector: 'ionic3-star-rating',\n    template: HTML_TEMPLATE,\n    styles: [CSS_STYLE],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: StarRating,\n            multi: true\n        }\n    ]\n})\nexport class StarRating implements ControlValueAccessor, OnInit {\n\n    ngOnInit(): void {\n        this.rating = this.rating || 3; //default after input`s initialization\n        for (var i = 0; i < this.maxRating; i++) {\n            this.iconsArray.push(i);\n        }\n    }\n\n    public readonly eventInfo = (() => {\n        const id = new Date().getTime();\n        const topic = `star-rating:${id}:changed`;\n        return {\n            topic\n        }\n    })();\n\n    private _rating: number;\n    private onChange: any;\n    private onTouched: any;\n    public disabled: boolean;\n\n    writeValue(obj: number): void {\n        this.rating = obj;\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.readonly = isDisabled ? \"true\" : \"false\";\n    }\n\n    @Input()\n    public set rating(val: number) {\n        this._rating = val;\n        // for form\n        if (this.onChange) {\n            this.onChange(val);\n        }\n    }\n\n    public get rating(): number {\n        return this._rating;\n    }\n\n    @Output()\n    ratingChanged: EventEmitter<number> = new EventEmitter<number>();\n\n    @Input()\n    readonly: string = \"false\";\n    @Input()\n    activeColor: string = '#488aff';\n    @Input()\n    defaultColor: string = '#aaaaaa';\n    @Input()\n    activeIcon: string = 'ios-star';\n    @Input()\n    defaultIcon: string = 'ios-star-outline';\n    @Input()\n    halfIcon: string = 'ios-star-half';\n    @Input()\n    halfStar: string = \"false\";\n    @Input()\n    maxRating: number = 5;\n    @Input()\n    fontSize: string = '28px';\n    Math: any;\n    parseFloat: any;\n    iconsArray: number[] = [];\n\n    constructor(private events: Events) {\n        this.Math = Math;\n        this.parseFloat = parseFloat;\n    }\n\n    changeRating(event) {\n\n        if (this.readonly && this.readonly === \"true\") return;\n        // event is different for firefox and chrome\n        let id = event.target.id ? parseInt(event.target.id) : parseInt(event.target.parentElement.id);\n        if (this.halfStar && this.halfStar === \"true\") {\n            this.rating = ((this.rating - id > 0) && (this.rating - id <= 0.5)) ? id + 1 : id + .5;\n        } else {\n            this.rating = id + 1;\n        }\n\n        // subscribe this event to get the changed value in your parent compoanent\n        this.events.publish(`star-rating:changed`, this.rating); //common event for all instances included for backwards compatibility\n        this.events.publish(this.eventInfo.topic, this.rating); //common event for all instances\n        // unique event\n        this.ratingChanged.emit(this.rating)\n    }\n\n}\n"]}